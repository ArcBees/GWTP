package ${impl.packageName};

import javax.inject.Inject;
import javax.inject.Provider;
import com.google.web.bindery.event.shared.EventBus;
import com.gwtplatform.mvp.client.proxy.ProxyImpl;
import com.gwtplatform.mvp.client.proxy.RevealContentHandler;
import com.gwtplatform.mvp.client.proxy.PlaceManager;
import com.gwtplatform.common.client.StandardProvider;
import ${proxy.qualifiedName};

public class ${impl.simpleName} extends ProxyImpl<${presenterName}> implements ${proxy.simpleName} {
    @Inject
    public ${presenterName}MyProxyImpl(EventBus eventBus, PlaceManager placeManager, Provider<${presenterName}> provider) {
        bind(placeManager, eventBus);
        presenter = new StandardProvider<>(provider);

        RevealContentHandler<${presenterName}> revealContentHandler = new RevealContentHandler<${presenterName}>( eventBus, this );
#foreach($slot in $slots)
        eventBus.addHandler( ${presenterName}.$slot, revealContentHandler );
#end
    }
}
