package $package;

import javax.inject.Singleton;

import com.google.gwt.inject.client.AbstractGinModule;
import com.google.inject.TypeLiteral;
import com.gwtplatform.dispatch.rest.client.ActionMetadataProvider;
import com.gwtplatform.dispatch.rest.client.ActionMetadataProviderImpl;
import com.gwtplatform.dispatch.rest.client.ResourceDelegate;
import com.gwtplatform.dispatch.rest.client.serialization.JacksonMapperProvider;
import com.gwtplatform.dispatch.rest.client.serialization.JacksonMapperProviderImpl;

#foreach ($service in $serviceDefinitions.getServices())
import $service.qualifiedSourceName;
import $service.qualifiedSourceName.replace("shared", "client")$suffix;
import $service.qualifiedSourceName.replace("shared", "client")ResourceDelegate;
#end

public class $implName extends AbstractGinModule {
    @Override
    protected void configure() {
        bind(ActionMetadataProvider.class).to(ActionMetadataProviderImpl.class);
        bind(JacksonMapperProvider.class).to(JacksonMapperProviderImpl.class).in(Singleton.class);

#foreach ($service in ${serviceDefinitions.getServices()})
        bind(${service.name}.class).to($service.name${suffix}.class).in(Singleton.class);
        bind(new TypeLiteral<ResourceDelegate<${service.name}>>() {}).to(${service.name}ResourceDelegate.class)
                .in(Singleton.class);

#end
    }
}
