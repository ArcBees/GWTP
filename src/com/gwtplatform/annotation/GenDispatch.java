/**
 * Copyright 2010 Gwt-Platform
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.gwtplatform.annotation;

import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * If you type:
 * 
 * <pre>
 * <code> 
 * {@literal}@GenDispatch
 * public class RetrieveFoo {
 *   @In(1) Key<Foo> fooKey;
 *   @Out(1) Foo foo;
 * }
 * </code>
 * </pre>
 * 
 * gwt-platform will generate two classes, RetrieveFooAction and
 * RetrieveFooResult.
 * <p/>
 * RetrieveFooAction will have fields, getters, and a constructor for fooKey,
 * plus equals, hashCode, toString etc, for it to function correctly as an Action.
 * <p/>
 * RetrieveFooAction will have fields, getters, and a constructor for fooKey,
 * plus equals, hashCode, toString etc, for it to function correctly as an Action.
 * <p/>
 * Notes:
 * <p/>
 * There is no naming requirement for your class name. It will be appended with
 * Action and Result
 * <p/>
 * {@literal}@GenDispatch takes 3 optional parameters
 * <li>isSecured: defaults to true.
 * <li>extraActionInterfaces: extra interfaces that the Action class will implement
 * <li>extraResultInterfaces: extra interfaces that the Result class will implement
 * <p/>
 * Be aware that the interface defined by extraActionInterfaces and extraResultInterfaces, 
 * must be able to be autogenerated using the field definitions.   
 * 
 * @author Brendan Doherty (All original code, concept attributed to Stephen
 *         Haberman)
 */

@Target({ElementType.TYPE})
@Retention(RetentionPolicy.RUNTIME)
@Inherited
public @interface GenDispatch {
	boolean isSecure() default true;
	String extraActionInterfaces() default "";
	String extraResultInterfaces() default "";
}
