#* @vtlvariable name="columnsInitializerDefinitions" type="com.gwtplatform.carstore.rebind.ColumnsInitializerDefinitions" *#
package ${packageName};

import com.google.gwt.core.shared.GWT;
import com.google.gwt.dom.client.Style;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.Column;

public class ${implName}Impl implements ${implName} {
    @Override
    public void initializeColumns(CellTable<${columnsInitializerDefinitions.getDtoCanonicalName()}> table) {
#foreach (${type} in ${columnsInitializerDefinitions.getColumns()})

        init${type.getMethodCapitalizedName()}Column(table);
#end
    }
#foreach (${type} in ${columnsInitializerDefinitions.getColumns()})

    private void init${type.getMethodCapitalizedName()}Column(CellTable<${columnsInitializerDefinitions.getDtoCanonicalName()}> table) {

        Column<${columnsInitializerDefinitions.getDtoCanonicalName()}, ${type.getReturnCellCanonicalName()}> column
                = new Column<${columnsInitializerDefinitions.getDtoCanonicalName()}, ${type.getReturnCellCanonicalName()}>(new ${type.getCellCanonicalName()}()) {
                        @Override
                        public ${type.getReturnCellCanonicalName()} getValue(${columnsInitializerDefinitions.getDtoCanonicalName()} object) {
                            return object.${type.method.getName()}();
                        }};

        table.addColumn(column, "${type.getColumn().headerName()}");
    }
#end
#foreach (${type} in ${columnsInitializerDefinitions.getColumns()})

    public ${type.getMethod().returnType.getQualifiedSourceName()} ${type.getMethod().getName()}() {
        return null;
    }
#end
}
